@startuml
/'title Inicialización
skinparam responseMessageBelowArrow true
skinparam monochrome true
skinparam style strictuml
hide footbox

Actor actor
participant juego as ":Juego"
participant jug as "Jugador"
participant pais as ":Pais"

actor ++
actor -> juego ++: agregarPaises(paises)

actor -> juego: inicializar()

loop para cada pais
    juego -> jug: ocupar(pais)
    juego -> pais: ocupadoPor(jugador, 1)
end loop
'/

title Inicialización
skinparam responseMessageBelowArrow true
skinparam monochrome true
skinparam style strictuml
hide footbox

Actor actor
participant juego as ":Juego"
participant mapa as ":Mapa"
participant jug as "Jugador"
participant pais as ":Pais"
participant turnos as ":Turnos"
participant tarjeta as ":Tarjeta"
actor ++
actor -> juego++: inicializar(cantJugadores, \n archivoPaises,\n archivoObjetivos, \n archivoTarjetas)

loop para cada jugador
    juego -> jug**: new (numJugador)
end loop

juego -> mapa**: new (continentes)
activate mapa

loop para cada pais
    mapa -> pais**: new (nombre, \ncontinente, \nlimitrofes)
end loop
mapa--

juego -> juego++: crearTarjetas(archivoTarjetas)
loop para cada tarjeta
juego -> tarjeta**: new (pais, simbolo)
end loop
juego--

juego -> turnos**: new (jugadores)

juego -> mapa++: repartirPaises(jugadores)
juego--

loop para cada pais
    mapa -> pais++: ocupadoPor(jugador, 1)
    pais -> jug++: ocupar(pais)
    jug--
end loop
mapa--
pais--

juego -> juego++: crearObjetivos()
loop por cada objetivo
juego -> Objetivo**: new (...)
end loop
juego--

@enduml