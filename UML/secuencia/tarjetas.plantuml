@startuml
title
**__Ronda de Ataques__**
Secuencia de obtenciÃ³n de Tarjeta
(Caso en que atacante gana batalla)
end title
skinparam responseMessageBelowArrow true
skinparam monochrome true
skinparam style strictuml
hide footbox

actor Actor
participant juego as ":Juego"
participant jug as "atacante:Jugador"
participant atacante as "paisAtacante:Pais"
participant batalla as ":Batalla"
participant defensor as "paisDefensor:Pais"
activate Actor

Actor -> jug ++: prepararAtaques()
note over jug
    debeRecibirTarjeta = true
end note
return

Actor -> atacante ++: atacar(defensor, cantFichas)
atacante -> atacante: verificarAlcanzanFichas(cantFichas)

create batalla
atacante -> batalla: new Batalla\n(defensor, atacante, cantFichas)
batalla -> batalla ++: efectuarBatalla()
batalla -> batalla: lanzarDados()
batalla -> atacante ++: perderFichas(cantFichas)
return
batalla -> defensor ++: perderFichas(cantFichas)
return
destroy batalla
deactivate batalla
return

Actor -> defensor ++: invadible()
return true

Actor -> atacante ++: invadir(defensor, cantFichas)
atacante -> atacante: verificarAlcanzanFichas(cantFichas)
atacante -> atacante: perderFichas(cantFichas)
atacante -> defensor ++: ocupadoPor(jugador, cantFichas)
defensor ->: desocupar(paisDefensor)
defensor <--]

defensor -> jug ++: ocupar(paisDefensor)
jug -> juego ++: pedirTarjeta()
note over jug
    debeRecibirTarjeta = false
end note
return unaTarjeta
return
return
return




@enduml
